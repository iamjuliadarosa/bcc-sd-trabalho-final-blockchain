// Implanta√ß√£o do Contrato
require('dotenv').config();
const { JsonRpcProvider, Wallet, ContractFactory } = require("ethers");
const { ethers } = require("ethers");

// 1Ô∏è‚É£ Provider: Ganache RPC
const provider = new ethers.JsonRpcProvider(process.env.RPC_URL);

// 2Ô∏è‚É£ Chave privada da conta do Ganache
const wallet = new ethers.Wallet(process.env.PRIVATE_KEY, provider);

// 3Ô∏è‚É£ ABI e Bytecode do contrato (copiados do Remix)
const abi = [
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "eleicaoId",
				"type": "uint256"
			},
			{
				"internalType": "string[]",
				"name": "opcoes",
				"type": "string[]"
			}
		],
		"name": "consultarResultado",
		"outputs": [
			{
				"internalType": "uint256[]",
				"name": "",
				"type": "uint256[]"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "eleicaoId",
				"type": "uint256"
			},
			{
				"internalType": "string",
				"name": "opcao",
				"type": "string"
			}
		],
		"name": "votar",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			},
			{
				"internalType": "string",
				"name": "",
				"type": "string"
			}
		],
		"name": "votosPorOpcao",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	}
];

const bytecode = "608060405234801561001057600080fd5b5061077a806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80633fccc6c114610046578063a328a8ac14610062578063c09279e014610092575b600080fd5b610060600480360381019061005b91906103f1565b6100c2565b005b61007c600480360381019061007791906103f1565b61010a565b6040516100899190610543565b60405180910390f35b6100ac60048036038101906100a7919061039d565b610145565b6040516100b99190610521565b60405180910390f35b600080838152602001908152602001600020816040516100e2919061050a565b9081526020016040518091039020600081548092919061010190610686565b91905055505050565b600060205281600052604060002081805160208101820180518482526020830160208501208183528095505050505050600091509150505481565b60606000825167ffffffffffffffff81111561018a577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156101b85781602001602082028036833780820191505090505b50905060005b835181101561028e57600080868152602001908152602001600020848281518110610212577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151604051610227919061050a565b90815260200160405180910390205482828151811061026f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018181525050808061028690610686565b9150506101be565b508091505092915050565b60006102ac6102a78461058f565b61055e565b9050808382526020820190508260005b858110156102ec57813585016102d2888261035e565b8452602084019350602083019250506001810190506102bc565b5050509392505050565b6000610309610304846105bb565b61055e565b90508281526020810184848401111561032157600080fd5b61032c848285610644565b509392505050565b600082601f83011261034557600080fd5b8135610355848260208601610299565b91505092915050565b600082601f83011261036f57600080fd5b813561037f8482602086016102f6565b91505092915050565b6000813590506103978161072d565b92915050565b600080604083850312156103b057600080fd5b60006103be85828601610388565b925050602083013567ffffffffffffffff8111156103db57600080fd5b6103e785828601610334565b9150509250929050565b6000806040838503121561040457600080fd5b600061041285828601610388565b925050602083013567ffffffffffffffff81111561042f57600080fd5b61043b8582860161035e565b9150509250929050565b600061045183836104ec565b60208301905092915050565b6000610468826105fb565b610472818561061e565b935061047d836105eb565b8060005b838110156104ae5781516104958882610445565b97506104a083610611565b925050600181019050610481565b5085935050505092915050565b60006104c682610606565b6104d0818561062f565b93506104e0818560208601610653565b80840191505092915050565b6104f58161063a565b82525050565b6105048161063a565b82525050565b600061051682846104bb565b915081905092915050565b6000602082019050818103600083015261053b818461045d565b905092915050565b600060208201905061055860008301846104fb565b92915050565b6000604051905081810181811067ffffffffffffffff82111715610585576105846106fe565b5b8060405250919050565b600067ffffffffffffffff8211156105aa576105a96106fe565b5b602082029050602081019050919050565b600067ffffffffffffffff8211156105d6576105d56106fe565b5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600081905092915050565b6000819050919050565b82818337600083830152505050565b60005b83811015610671578082015181840152602081019050610656565b83811115610680576000848401525b50505050565b60006106918261063a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156106c4576106c36106cf565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6107368161063a565b811461074157600080fd5b5056fea2646970667358221220d5549e996daae5ba3ae6d87d7e275b926f22823b63192923df7656270a0f86f464736f6c63430008000033";

async function deploy() {
  const factory = new ContractFactory(abi, bytecode, wallet);
  const contract = await factory.deploy();

  await contract.waitForDeployment();

  const address = await contract.getAddress();
  console.log("‚úÖ Contrato implantado com sucesso!");
  console.log("üì¨ Endere√ßo do contrato:", address);
}

deploy().catch(console.error);