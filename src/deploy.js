// Implanta√ß√£o do Contrato
require('dotenv').config();
const { JsonRpcProvider, Wallet, ContractFactory } = require("ethers");
const { ethers } = require("ethers");

// 1Ô∏è‚É£ Provider: Ganache RPC
const provider = new ethers.JsonRpcProvider(process.env.RPC_URL);

// 2Ô∏è‚É£ Chave privada da conta do Ganache
const wallet = new ethers.Wallet(process.env.PRIVATE_KEY, provider);

// 3Ô∏è‚É£ ABI e Bytecode do contrato (copiados do Remix)
const abi = [
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "eleicaoId",
				"type": "uint256"
			},
			{
				"indexed": false,
				"internalType": "string",
				"name": "hashResultado",
				"type": "string"
			},
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "timestamp",
				"type": "uint256"
			}
		],
		"name": "RegistroCriado",
		"type": "event"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "eleicaoId",
				"type": "uint256"
			}
		],
		"name": "consultarRegistro",
		"outputs": [
			{
				"internalType": "string",
				"name": "",
				"type": "string"
			},
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "eleicaoId",
				"type": "uint256"
			},
			{
				"internalType": "string",
				"name": "hashResultado",
				"type": "string"
			}
		],
		"name": "registrarResultado",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"name": "registros",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "timestamp",
				"type": "uint256"
			},
			{
				"internalType": "string",
				"name": "hashResultado",
				"type": "string"
			}
		],
		"stateMutability": "view",
		"type": "function"
	}
];
const bytecode = "0x608060405234801561001057600080fd5b5061070e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80630af40a9914610046578063cbb63a8e14610077578063ded39a5d14610093575b600080fd5b610060600480360381019061005b91906103f4565b6100c4565b60405161006e9291906104b9565b60405180910390f35b610091600480360381019061008c919061041d565b610198565b005b6100ad60048036038101906100a891906103f4565b610228565b6040516100bb9291906104e9565b60405180910390f35b60606000806000808581526020019081526020016000206040518060400160405290816000820154815260200160018201805461010090610620565b80601f016020809104026020016040519081016040528092919081815260200182805461012c90610620565b80156101795780601f1061014e57610100808354040283529160200191610179565b820191906000526020600020905b81548152906001019060200180831161015c57829003601f168201915b5050505050815250509050806020015181600001519250925050915091565b6040518060400160405280428152602001828152506000808481526020019081526020016000206000820151816000015560208201518160010190805190602001906101e59291906102d4565b509050507f2c2f9811624e80cd0111b1084e602c3fd4e6190fe7f0189c02f198d905062e9c82824260405161021c93929190610519565b60405180910390a15050565b600060205280600052604060002060009150905080600001549080600101805461025190610620565b80601f016020809104026020016040519081016040528092919081815260200182805461027d90610620565b80156102ca5780601f1061029f576101008083540402835291602001916102ca565b820191906000526020600020905b8154815290600101906020018083116102ad57829003601f168201915b5050505050905082565b8280546102e090610620565b90600052602060002090601f0160209004810192826103025760008555610349565b82601f1061031b57805160ff1916838001178555610349565b82800160010185558215610349579182015b8281111561034857825182559160200191906001019061032d565b5b509050610356919061035a565b5090565b5b8082111561037357600081600090555060010161035b565b5090565b600061038a61038584610588565b610557565b9050828152602081018484840111156103a257600080fd5b6103ad8482856105de565b509392505050565b600082601f8301126103c657600080fd5b81356103d6848260208601610377565b91505092915050565b6000813590506103ee816106c1565b92915050565b60006020828403121561040657600080fd5b6000610414848285016103df565b91505092915050565b6000806040838503121561043057600080fd5b600061043e858286016103df565b925050602083013567ffffffffffffffff81111561045b57600080fd5b610467858286016103b5565b9150509250929050565b600061047c826105b8565b61048681856105c3565b93506104968185602086016105ed565b61049f816106b0565b840191505092915050565b6104b3816105d4565b82525050565b600060408201905081810360008301526104d38185610471565b90506104e260208301846104aa565b9392505050565b60006040820190506104fe60008301856104aa565b81810360208301526105108184610471565b90509392505050565b600060608201905061052e60008301866104aa565b81810360208301526105408185610471565b905061054f60408301846104aa565b949350505050565b6000604051905081810181811067ffffffffffffffff8211171561057e5761057d610681565b5b8060405250919050565b600067ffffffffffffffff8211156105a3576105a2610681565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b6000819050919050565b82818337600083830152505050565b60005b8381101561060b5780820151818401526020810190506105f0565b8381111561061a576000848401525b50505050565b6000600282049050600182168061063857607f821691505b6020821081141561064c5761064b610652565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6106ca816105d4565b81146106d557600080fd5b5056fea2646970667358221220db3ee63b84964fa7c8f4942b4fe4dd176fc504f6ca74af33cfda1184a1e96d0464736f6c63430008000033";

async function deploy() {
  const factory = new ContractFactory(abi, bytecode, wallet);
  const contract = await factory.deploy();

  await contract.waitForDeployment();

  const address = await contract.getAddress();
  console.log("‚úÖ Contrato implantado com sucesso!");
  console.log("üì¨ Endere√ßo do contrato:", address);
}

deploy().catch(console.error);